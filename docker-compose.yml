services:
  chatwoot-app:
    container_name: chatwoot-app
    env_file: .env
    image: fexrizzieri/chatwoot-arm64:3.15.0-arm64
    command: bundle exec rails s -p 3000 -b 0.0.0.0
    entrypoint: docker/entrypoints/rails.sh
    restart: always
    volumes:
      - chatwoot-storage:/app/storage
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      - chatwoot-net
    environment:
      - INSTALLATION_NAME=${INSTALLATION_NAME}
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - FRONTEND_URL=${FRONTEND_URL}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE}
      - FORCE_SSL=${FORCE_SSL}
      - ENABLE_ACCOUNT_SIGNUP=false
      - REDIS_URL=${REDIS_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - ACTIVE_STORAGE_SERVICE=local
      - RAILS_LOG_TO_STDOUT=true
      - USE_INBOX_AVATAR_FOR_BOT=true

  chatwoot-sidekiq:
    container_name: chatwoot-sidekiq
    env_file: .env
    image: fexrizzieri/chatwoot-arm64:3.15.0-arm64
    command: bundle exec sidekiq -C config/sidekiq.yml
    restart: always
    volumes:
      - chatwoot-storage:/app/storage
    networks:
      - chatwoot-net
    environment:
      - INSTALLATION_NAME=${INSTALLATION_NAME}
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - FRONTEND_URL=${FRONTEND_URL}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE}
      - FORCE_SSL=${FORCE_SSL}
      - ENABLE_ACCOUNT_SIGNUP=${ENABLE_ACCOUNT_SIGNUP}
      - REDIS_URL=${REDIS_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - ACTIVE_STORAGE_SERVICE=local
      - RAILS_LOG_TO_STDOUT=true
      - USE_INBOX_AVATAR_FOR_BOT=true

  chatwoot-postgres:
    container_name: chatwoot-postgres
    env_file: .env
    image: postgres:12
    restart: always
    networks:
      - chatwoot-net
    volumes:
      - chatwoot-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  chatwoot-redis:
    container_name: chatwoot-redis
    env_file: .env
    image: redis:alpine
    networks:
      - chatwoot-net
    restart: always
    command: ["sh", "-c", "redis-server"]
    volumes:
      - chatwoot-redis:/data

networks:
  chatwoot-net:

volumes:
  chatwoot-storage:
  chatwoot-postgres:
  chatwoot-redis:
